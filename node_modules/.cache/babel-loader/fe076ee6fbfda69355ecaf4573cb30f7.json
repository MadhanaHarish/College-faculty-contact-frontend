{"ast":null,"code":"var _jsxFileName = \"D:\\\\Contact-Manager-Mern\\\\client\\\\src\\\\components\\\\ContactDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./ContactDetail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactDetail = props => {\n  _s();\n\n  const location = useLocation();\n\n  const _id = location.pathname.substring(location.pathname.lastIndexOf(\"/\") + 1);\n\n  const contact = props.contacts.find(contact => contact._id === _id); // Hooks should not be called conditionally\n\n  const [currentStatus, setCurrentStatus] = useState(\"\"); // Memoize daysOfWeek and periodTimings to avoid dependency issues in useEffect\n\n  const daysOfWeek = useMemo(() => [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"], []);\n  const periodTimings = useMemo(() => [[\"08:45\", \"09:40\"], [\"09:41\", \"10:25\"], [\"10:45\", \"11:30\"], [\"11:30\", \"12:15\"], [\"13:15\", \"14:00\"], [\"14:00\", \"14:45\"], [\"15:00\", \"15:45\"], [\"15:45\", \"16:30\"]], []);\n  useEffect(() => {\n    const updateStatus = () => {\n      if (!contact || !contact.tableData) return;\n      const now = new Date();\n      const currentDay = daysOfWeek[now.getDay() - 1]; // Map to daysOfWeek (0 = Sunday)\n\n      const currentTime = `${now.getHours().toString().padStart(2, \"0\")}:${now.getMinutes().toString().padStart(2, \"0\")}`;\n      let status = \"Not in session\";\n      periodTimings.forEach((_ref, periodIndex) => {\n        let [start, end] = _ref;\n\n        if (currentTime >= start && currentTime <= end) {\n          const dayIndex = daysOfWeek.indexOf(currentDay);\n          status = contact.tableData[periodIndex] && contact.tableData[periodIndex][dayIndex] ? contact.tableData[periodIndex][dayIndex] : \"No data\";\n        }\n      });\n      setCurrentStatus(status);\n    };\n\n    updateStatus();\n    const interval = setInterval(updateStatus, 60000); // Update every minute\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, [contact, daysOfWeek, periodTimings]);\n\n  if (!contact) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Contact not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n\n  const {\n    name,\n    phoneNumber,\n    email,\n    password,\n    photo,\n    department,\n    tableData\n  } = contact;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn3\",\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: photo || \"https://www.gravatar.com/avatar/?d=mp\",\n          alt: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content-header\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content-phone\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 57\n          }, this), \" \", phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content-department\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Department:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 62\n          }, this), \" \", department]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content-email\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 57\n          }, this), \" \", email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 58\n          }, this), \" \", currentStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"contact-detail-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), daysOfWeek.map((day, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: day\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.from({\n          length: 8\n        }, (_, i) => i + 1).map((period, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: period\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), daysOfWeek.map((_, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tableData && tableData[rowIndex] && tableData[rowIndex][colIndex] ? tableData[rowIndex][colIndex] : \"\"\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this))]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactDetail, \"aRTA7R1V8LWXYiEI4wY07zWBdmg=\", false, function () {\n  return [useLocation];\n});\n\n_c = ContactDetail;\nexport default ContactDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactDetail\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Link","useLocation","ContactDetail","props","location","_id","pathname","substring","lastIndexOf","contact","contacts","find","currentStatus","setCurrentStatus","daysOfWeek","periodTimings","updateStatus","tableData","now","Date","currentDay","getDay","currentTime","getHours","toString","padStart","getMinutes","status","forEach","periodIndex","start","end","dayIndex","indexOf","interval","setInterval","clearInterval","name","phoneNumber","email","password","photo","department","map","day","index","Array","from","length","_","i","period","rowIndex","colIndex"],"sources":["D:/Contact-Manager-Mern/client/src/components/ContactDetail.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"./ContactDetail.css\";\r\n\r\nconst ContactDetail = (props) => {\r\n    const location = useLocation();\r\n    const _id = location.pathname.substring(\r\n        location.pathname.lastIndexOf(\"/\") + 1\r\n    );\r\n\r\n    const contact = props.contacts.find((contact) => contact._id === _id);\r\n\r\n    // Hooks should not be called conditionally\r\n    const [currentStatus, setCurrentStatus] = useState(\"\");\r\n\r\n    // Memoize daysOfWeek and periodTimings to avoid dependency issues in useEffect\r\n    const daysOfWeek = useMemo(() => [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"], []);\r\n    const periodTimings = useMemo(\r\n        () => [\r\n            [\"08:45\", \"09:40\"],\r\n            [\"09:41\", \"10:25\"],\r\n            [\"10:45\", \"11:30\"],\r\n            [\"11:30\", \"12:15\"],\r\n            [\"13:15\", \"14:00\"],\r\n            [\"14:00\", \"14:45\"],\r\n            [\"15:00\", \"15:45\"],\r\n            [\"15:45\", \"16:30\"],\r\n        ],\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        const updateStatus = () => {\r\n            if (!contact || !contact.tableData) return;\r\n\r\n            const now = new Date();\r\n            const currentDay = daysOfWeek[now.getDay() - 1]; // Map to daysOfWeek (0 = Sunday)\r\n            const currentTime = `${now.getHours().toString().padStart(2, \"0\")}:${now.getMinutes().toString().padStart(2, \"0\")}`;\r\n\r\n            let status = \"Not in session\";\r\n            periodTimings.forEach(([start, end], periodIndex) => {\r\n                if (currentTime >= start && currentTime <= end) {\r\n                    const dayIndex = daysOfWeek.indexOf(currentDay);\r\n                    status = contact.tableData[periodIndex] && contact.tableData[periodIndex][dayIndex]\r\n                        ? contact.tableData[periodIndex][dayIndex]\r\n                        : \"No data\";\r\n                }\r\n            });\r\n            setCurrentStatus(status);\r\n        };\r\n\r\n        updateStatus();\r\n        const interval = setInterval(updateStatus, 60000); // Update every minute\r\n        return () => clearInterval(interval); // Cleanup on unmount\r\n    }, [contact, daysOfWeek, periodTimings]);\r\n\r\n    if (!contact) {\r\n        return <div>Contact not found</div>;\r\n    }\r\n\r\n    const { name, phoneNumber, email, password, photo, department, tableData } = contact;\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Link to=\"/\">\r\n                <button className=\"btn3\">{\"<\"}</button>\r\n            </Link>\r\n            <div className=\"card\">\r\n                <div className=\"card-image\">\r\n                    <img src={photo || \"https://www.gravatar.com/avatar/?d=mp\"} alt=\"user\" />\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <div className=\"card-content-header\">{name}</div>\r\n                    <div className=\"card-content-phone\"><strong>Phone:</strong> {phoneNumber}</div>\r\n                    <div className=\"card-content-department\"><strong>Department:</strong> {department}</div>\r\n                    <div className=\"card-content-email\"><strong>Email:</strong> {email}</div>\r\n                    <div className=\"card-content-status\"><strong>Current Status:</strong> {currentStatus}</div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Formal Table */}\r\n            <table className=\"contact-detail-table\">\r\n                <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    {daysOfWeek.map((day, index) => (\r\n                        <th key={index}>{day}</th>\r\n                    ))}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {Array.from({ length: 8 }, (_, i) => i + 1).map((period, rowIndex) => (\r\n                    <tr key={rowIndex}>\r\n                        <td><strong>{period}</strong></td>\r\n                        {daysOfWeek.map((_, colIndex) => (\r\n                            <td key={colIndex}>\r\n                                {tableData && tableData[rowIndex] && tableData[rowIndex][colIndex]\r\n                                    ? tableData[rowIndex][colIndex]\r\n                                    : \"\"}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactDetail;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAO,qBAAP;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;;EACA,MAAMI,GAAG,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,SAAlB,CACRH,QAAQ,CAACE,QAAT,CAAkBE,WAAlB,CAA8B,GAA9B,IAAqC,CAD7B,CAAZ;;EAIA,MAAMC,OAAO,GAAGN,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAqBF,OAAD,IAAaA,OAAO,CAACJ,GAAR,KAAgBA,GAAjD,CAAhB,CAN6B,CAQ7B;;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD,CAT6B,CAW7B;;EACA,MAAMiB,UAAU,GAAGf,OAAO,CAAC,MAAM,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,QAA/C,EAAyD,UAAzD,CAAP,EAA6E,EAA7E,CAA1B;EACA,MAAMgB,aAAa,GAAGhB,OAAO,CACzB,MAAM,CACF,CAAC,OAAD,EAAU,OAAV,CADE,EAEF,CAAC,OAAD,EAAU,OAAV,CAFE,EAGF,CAAC,OAAD,EAAU,OAAV,CAHE,EAIF,CAAC,OAAD,EAAU,OAAV,CAJE,EAKF,CAAC,OAAD,EAAU,OAAV,CALE,EAMF,CAAC,OAAD,EAAU,OAAV,CANE,EAOF,CAAC,OAAD,EAAU,OAAV,CAPE,EAQF,CAAC,OAAD,EAAU,OAAV,CARE,CADmB,EAWzB,EAXyB,CAA7B;EAcAD,SAAS,CAAC,MAAM;IACZ,MAAMkB,YAAY,GAAG,MAAM;MACvB,IAAI,CAACP,OAAD,IAAY,CAACA,OAAO,CAACQ,SAAzB,EAAoC;MAEpC,MAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;MACA,MAAMC,UAAU,GAAGN,UAAU,CAACI,GAAG,CAACG,MAAJ,KAAe,CAAhB,CAA7B,CAJuB,CAI0B;;MACjD,MAAMC,WAAW,GAAI,GAAEJ,GAAG,CAACK,QAAJ,GAAeC,QAAf,GAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAA2C,IAAGP,GAAG,CAACQ,UAAJ,GAAiBF,QAAjB,GAA4BC,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CAA6C,EAAlH;MAEA,IAAIE,MAAM,GAAG,gBAAb;MACAZ,aAAa,CAACa,OAAd,CAAsB,OAAeC,WAAf,KAA+B;QAAA,IAA9B,CAACC,KAAD,EAAQC,GAAR,CAA8B;;QACjD,IAAIT,WAAW,IAAIQ,KAAf,IAAwBR,WAAW,IAAIS,GAA3C,EAAgD;UAC5C,MAAMC,QAAQ,GAAGlB,UAAU,CAACmB,OAAX,CAAmBb,UAAnB,CAAjB;UACAO,MAAM,GAAGlB,OAAO,CAACQ,SAAR,CAAkBY,WAAlB,KAAkCpB,OAAO,CAACQ,SAAR,CAAkBY,WAAlB,EAA+BG,QAA/B,CAAlC,GACHvB,OAAO,CAACQ,SAAR,CAAkBY,WAAlB,EAA+BG,QAA/B,CADG,GAEH,SAFN;QAGH;MACJ,CAPD;MAQAnB,gBAAgB,CAACc,MAAD,CAAhB;IACH,CAjBD;;IAmBAX,YAAY;IACZ,MAAMkB,QAAQ,GAAGC,WAAW,CAACnB,YAAD,EAAe,KAAf,CAA5B,CArBY,CAqBuC;;IACnD,OAAO,MAAMoB,aAAa,CAACF,QAAD,CAA1B,CAtBY,CAsB0B;EACzC,CAvBQ,EAuBN,CAACzB,OAAD,EAAUK,UAAV,EAAsBC,aAAtB,CAvBM,CAAT;;EAyBA,IAAI,CAACN,OAAL,EAAc;IACV,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,MAAM;IAAE4B,IAAF;IAAQC,WAAR;IAAqBC,KAArB;IAA4BC,QAA5B;IAAsCC,KAAtC;IAA6CC,UAA7C;IAAyDzB;EAAzD,IAAuER,OAA7E;EAEA,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,wBACI,QAAC,IAAD;MAAM,EAAE,EAAC,GAAT;MAAA,uBACI;QAAQ,SAAS,EAAC,MAAlB;QAAA,UAA0B;MAA1B;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAK,SAAS,EAAC,YAAf;QAAA,uBACI;UAAK,GAAG,EAAEgC,KAAK,IAAI,uCAAnB;UAA4D,GAAG,EAAC;QAAhE;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAK,SAAS,EAAC,cAAf;QAAA,wBACI;UAAK,SAAS,EAAC,qBAAf;UAAA,UAAsCJ;QAAtC;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,oBAAf;UAAA,wBAAoC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAApC,OAA6DC,WAA7D;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAK,SAAS,EAAC,yBAAf;UAAA,wBAAyC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAzC,OAAuEI,UAAvE;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAK,SAAS,EAAC,oBAAf;UAAA,wBAAoC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAApC,OAA6DH,KAA7D;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ,eAKI;UAAK,SAAS,EAAC,qBAAf;UAAA,wBAAqC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAArC,OAAuE3B,aAAvE;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eAkBI;MAAO,SAAS,EAAC,sBAAjB;MAAA,wBACI;QAAA,uBACA;UAAA,wBACI;YAAA;YAAA;YAAA;UAAA,QADJ,EAEKE,UAAU,CAAC6B,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,kBACZ;YAAA,UAAiBD;UAAjB,GAASC,KAAT;YAAA;YAAA;YAAA;UAAA,QADH,CAFL;QAAA;UAAA;UAAA;UAAA;QAAA;MADA;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAA,UACCC,KAAK,CAACC,IAAN,CAAW;UAAEC,MAAM,EAAE;QAAV,CAAX,EAA0B,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAAxC,EAA2CP,GAA3C,CAA+C,CAACQ,MAAD,EAASC,QAAT,kBAC5C;UAAA,wBACI;YAAA,uBAAI;cAAA,UAASD;YAAT;cAAA;cAAA;cAAA;YAAA;UAAJ;YAAA;YAAA;YAAA;UAAA,QADJ,EAEKrC,UAAU,CAAC6B,GAAX,CAAe,CAACM,CAAD,EAAII,QAAJ,kBACZ;YAAA,UACKpC,SAAS,IAAIA,SAAS,CAACmC,QAAD,CAAtB,IAAoCnC,SAAS,CAACmC,QAAD,CAAT,CAAoBC,QAApB,CAApC,GACKpC,SAAS,CAACmC,QAAD,CAAT,CAAoBC,QAApB,CADL,GAEK;UAHV,GAASA,QAAT;YAAA;YAAA;YAAA;UAAA,QADH,CAFL;QAAA,GAASD,QAAT;UAAA;UAAA;UAAA;QAAA,QADH;MADD;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA6CH,CAvGD;;GAAMlD,a;UACeD,W;;;KADfC,a;AAyGN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}